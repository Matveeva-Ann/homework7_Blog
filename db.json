{
  "articles": [
    {
      "title": "Що нового в TypeScript 5.0. Декоратори, покращення продуктивності та безпеки типізації",
      "text": "Привіт! Мене звати Андрій, і я JavaScript-розробник у компанії Rolique. Як видно із статистики мов програмування DOU, популярність TypeScript стрімко зростає. І я можу це підтвердити, адже практично на всіх останні моїх проєктах використовувався TypeScript як основна мова програмування.\n\nНещодавно вийшла нова версія TypeScript 5.0. Тож давайте розберемося які основні зміни відбулися.\n\nЦей реліз приніс багато нових функцій, при цьому, як стверджують розробники, метою було зробити TypeScript меншим, простішим та швидшим:\n\nреалізували новий стандарт декораторів;\nдодали кращу підтримку ESM-проектів в Node та бандлерах;\nпокращили поведінку enum;\nрозширили функціональність JSDoc;\nспростили конфігурацію та здійснили багато інших поліпшень",
      "author": "Андрій Кладочний, JavaScript Software Engineer",
      "id": 1
    },
    {
      "title": "З IT на держслужбу. Чим займається радник CDTO в КМДА та чому бюрократія є «необхідним злом» — розповідає Олекс Майстренко",
      "text": "   З IT на держслужбу. Чим займається радник CDTO в КМДА та чому бюрократія є «необхідним злом» — розповідає Олекс Майстренко\nОлекс Майстренко — радник CDTO у Київській міській державній адміністрації та один з ведучих DOU Podcast. До приходу на держслужбу в серпні 2022-го Олекс багато років працював у комерційному секторі, обіймав посаду Head of Engineering.\n\nПро своє рішення перейти з IT у державний сектор, роботу радника в КМДА, «необхідне зло» бюрократії та аналог Jira у міськдержадміністрації він розповів у розмові зі своїм колегою по подкасту, Service Manager у MacPaw Юрою Федоренком.",
      "author": "Юра Федоренко, Service Manager",
      "id": 2
    },
    {
      "title": "Що нового в TypeScript 5.0. Декоратори, покращення продуктивності та безпеки типізації",
      "text": "Привіт! Мене звати Андрій, і я JavaScript-розробник у компанії Rolique. Як видно із статистики мов програмування DOU, популярність TypeScript стрімко зростає. І я можу це підтвердити, адже практично на всіх останні моїх проєктах використовувався TypeScript як основна мова програмування.\n\nНещодавно вийшла нова версія TypeScript 5.0. Тож давайте розберемося які основні зміни відбулися.\n\nЦей реліз приніс багато нових функцій, при цьому, як стверджують розробники, метою було зробити TypeScript меншим, простішим та швидшим:\n\nреалізували новий стандарт декораторів;\nдодали кращу підтримку ESM-проектів в Node та бандлерах;\nпокращили поведінку enum;\nрозширили функціональність JSDoc;\nспростили конфігурацію та здійснили багато інших поліпшень.\nДекоратори\nДекоратори — це інструмент, який дозволяє розширювати поведінку класів, методів, властивостей об’єктів в декларативний спосіб, без зміни коду безпосередньо. Є висока ймовірність, що декоратори скоро стануть частиною стандарту ECMAScript, тому щоб зберегти сумісність, їх додали в TypeScript 5.0.\nМетод greet досить простий у цьому випадку, але уявімо, що в ньому міститься якась складна логіка. Природно, що ми захочемо додати console.log, які за потреби дозволять віддебажити цей метод.\nТакий підхід досить зручний і було б чудово мати можливість легко додавати логування і для інших методів. І тут нам у нагоді стають декоратори.\n\nДекоратор — це функція, яка приймає target (оригінальний метод, який ми обгортаємо декоратором) і context (контекст виклику метода, який містить додаткову інформацію про «декорований» елемент, як його тип, ім’я і т. п.). Також ми повинні повернути нову функцію, в якій явно викликаємо target. Ми можемо додати логіку перед і після цього виклику.\nВарто зазначити, що TypeScript у попередніх версіях підтримував «експериментальну» версію декораторів, яка вмикається флагом --experimentalDecorators. Вони були побудовані на основі старішої версії, тому не повністю сумісні з новими змінами. Та через те що функціональність була досить популярною (зокрема активно використовувалася такими інструментами як Angular і Nest.js), вона і далі певний час буде доступна з увімкненим флагом --experimentalDecorators. За замовчанням же будуть використовуватися «нові» ES-декоратори.",
      "author": "Андрій Кладочний, JavaScript Software Engineer ",
      "id": 3
    }
  ]
}